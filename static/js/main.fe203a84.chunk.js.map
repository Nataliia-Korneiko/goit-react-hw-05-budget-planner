{"version":3,"sources":["redux/types.js","redux/budget/budgetReducer.js","redux/rootReducer.js","redux/store.js","components/shared/Form.js","components/shared/Label.js","components/shared/Input.js","components/shared/Button.js","redux/budget/budgetSelectors.js","components/BudgetForm/BudgetForm.js","redux/budget/budgetActions.js","components/ExpenseForm/ExpenseForm.js","components/ExpensesTable/ExpensesTable.js","components/Value/Value.js","components/Values/Values.js","components/App.js","index.js"],"names":["types","SET_BUDGET","ADD_EXPENSES","REMOVE_EXPENSES","budgetLocalStorage","localStorage","getItem","budget","JSON","parse","expensesLocalStorage","expenses","initialState","budgetReducer","state","type","payload","newExpenses","filter","el","id","rootReducer","combineReducers","budgetData","budgetReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","StyledForm","styled","form","Form","onSubmit","children","StyledLabel","label","props","customStyles","Label","StyledInput","input","Input","value","onChange","name","StyledButton","button","Button","onClick","defaultProps","getBudget","getExpenses","calculateTotalExpenses","reduce","acc","amount","calculateBalance","BudgetForm","handleChange","e","setState","Number","target","handleSubmit","preventDefault","onSave","prevProps","this","setItem","stringify","Component","connect","dispatch","data","ExpenseForm","shortid","generate","Table","table","onRemove","removeExpenses","map","key","Container","div","isPositive","p","Amount","Value","section","balance","budgetSelectors","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fe203a84.chunk.js","sourcesContent":["const types = {\n  SET_BUDGET: 'SET_BUDGET',\n  ADD_EXPENSES: 'ADD_EXPENSES',\n  REMOVE_EXPENSES: ' REMOVE_EXPENSES',\n};\n\nexport default types;\n","import types from '../types';\n\nconst budgetLocalStorage = localStorage.getItem('budget');\nlet budget = 0;\n\nif (budgetLocalStorage) {\n  budget = JSON.parse(budgetLocalStorage);\n}\n\nconst expensesLocalStorage = localStorage.getItem('expenses');\nlet expenses = [];\n\nif (expensesLocalStorage) {\n  expenses = JSON.parse(expensesLocalStorage);\n}\n\nconst initialState = { budget, expenses };\n\nconst budgetReducer = (state = { ...initialState }, { type, payload }) => {\n  switch (type) {\n    case types.SET_BUDGET:\n      return { ...state, budget: state.budget + payload.budget };\n\n    case types.ADD_EXPENSES:\n      return { ...state, expenses: [...state.expenses, payload.expenses] };\n\n    case types.REMOVE_EXPENSES: {\n      const newExpenses = state.expenses.filter(el => el.id !== payload.id);\n      return { ...state, expenses: newExpenses };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default budgetReducer;\n","import { combineReducers } from 'redux';\nimport budgetReducers from './budget/budgetReducer';\n\nconst rootReducer = combineReducers({\n  budgetData: budgetReducers,\n});\n\nexport default rootReducer;\n","/* eslint-disable no-underscore-dangle */\nimport { createStore } from 'redux';\nimport rootReducer from './rootReducer';\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\nexport default store;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 16px;\n  width: 100%;\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nconst Form = ({ onSubmit = () => null, children }) => (\n  <StyledForm onSubmit={onSubmit}>{children}</StyledForm>\n);\n\nForm.propTypes = {\n  children: PropTypes.node.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledLabel = styled.label`\n  display: inline-block;\n  font-size: 20px;\n  color: #171718;\n  cursor: pointer;\n  ${props => props.customStyles}\n`;\n\nconst Label = ({ children, customStyles }) => (\n  <StyledLabel customStyles={customStyles}>{children}</StyledLabel>\n);\n\nLabel.propTypes = {\n  children: PropTypes.node.isRequired,\n  customStyles: PropTypes.string.isRequired,\n};\n\nexport default Label;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledInput = styled.input`\n  color: #171718;\n  font: inherit;\n  font-size: 1.2rem;\n  padding: 16px;\n  border-radius: 4px;\n  border: 1px solid #bdbdbd;\n  width: 100%;\n  outline: 0;\n\n  &:focus {\n    border: 1px solid #2b32b2;\n  }\n`;\n\nconst Input = ({\n  type = ' text',\n  value = '',\n  onChange = () => null,\n  name = '',\n}) => <StyledInput type={type} value={value} onChange={onChange} name={name} />;\n\nInput.propTypes = {\n  type: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Input;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledButton = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n  background-color: #3f51b5;\n  border: 0;\n  outline: 0;\n  padding: 8px 24px;\n  border-radius: 4px;\n  cursor: pointer;\n  box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.05);\n  font: inherit;\n  text-transform: uppercase;\n  user-select: none;\n\n  transition: background-color 200ms ease-in-out;\n\n  &:hover {\n    box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.15);\n    background-color: #303f9f;\n  }\n`;\n\nconst Button = ({ type = 'button', label = '', onClick = () => null }) => (\n  <StyledButton type={type} onClick={onClick}>\n    {label}\n  </StyledButton>\n);\n\nButton.propTypes = {\n  type: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onClick: PropTypes.func,\n};\n\nButton.defaultProps = {\n  onClick() {},\n};\n\nexport default Button;\n","export const getBudget = store => store.budgetData.budget;\n\nexport const getExpenses = store => store.budgetData.expenses;\n\nexport const calculateTotalExpenses = store => {\n  const arrExpenses = getExpenses(store);\n  const sum = arrExpenses.reduce((acc, el) => acc + el.amount, 0);\n\n  return sum;\n};\n\nexport const calculateBalance = store =>\n  getBudget(store) - calculateTotalExpenses(store);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Form from '../shared/Form';\nimport Label from '../shared/Label';\nimport Input from '../shared/Input';\nimport Button from '../shared/Button';\nimport { getBudget } from '../../redux/budget/budgetSelectors';\nimport { setBudget } from '../../redux/budget/budgetActions';\n\nconst labelStyles = `\n  margin-bottom: 16px;\n`;\n\nclass BudgetForm extends Component {\n  static propTypes = {\n    budget: PropTypes.number.isRequired,\n    onSave: PropTypes.func.isRequired,\n  };\n\n  state = {\n    budget: 0,\n  };\n\n  componentDidUpdate(prevProps) {\n    const { budget } = this.props;\n\n    if (prevProps.budget !== budget) {\n      localStorage.setItem('budget', JSON.stringify(budget));\n    }\n  }\n\n  handleChange = e => {\n    this.setState({\n      budget: Number(e.target.value),\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const { budget } = this.state;\n    const { onSave } = this.props;\n\n    onSave(budget);\n    this.setState({ budget: 0 });\n  };\n\n  render() {\n    const { budget } = this.state;\n\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Label customStyles={labelStyles}>\n          Enter your total budget\n          <Input\n            name=\"budget\"\n            type=\"number\"\n            value={budget === 0 ? '' : budget}\n            onChange={this.handleChange}\n          />\n        </Label>\n\n        <Button label=\"Save\" type=\"submit\" />\n      </Form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  budget: getBudget(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSave: data => dispatch(setBudget(data)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BudgetForm);\n","import types from '../types';\n\nexport const setBudget = budget => ({\n  type: types.SET_BUDGET,\n  payload: {\n    budget,\n  },\n});\n\nexport const addExpenses = expenses => ({\n  type: types.ADD_EXPENSES,\n  payload: {\n    expenses,\n  },\n});\n\nexport const removeExpenses = id => ({\n  type: types.REMOVE_EXPENSES,\n  payload: {\n    id,\n  },\n});\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport shortid from 'shortid';\nimport Form from '../shared/Form';\nimport Label from '../shared/Label';\nimport Input from '../shared/Input';\nimport Button from '../shared/Button';\nimport { getExpenses } from '../../redux/budget/budgetSelectors';\nimport { addExpenses } from '../../redux/budget/budgetActions';\n\nconst labelStyles = `\n  margin-bottom: 16px;\n`;\n\nclass ExpenseForm extends Component {\n  static propTypes = {\n    expenses: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n    onSave: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    amount: 0,\n  };\n\n  componentDidUpdate(prevProps) {\n    const { expenses } = this.props;\n    if (prevProps.expenses !== expenses) {\n      localStorage.setItem('expenses', JSON.stringify(expenses));\n    }\n  }\n\n  handleChange = ({ target }) => {\n    this.setState({\n      [target.name]: target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const { name, amount } = this.state;\n    const { onSave } = this.props;\n\n    onSave({ name, amount: Number(amount), id: shortid.generate() });\n    this.setState({ name: '', amount: 0 });\n  };\n\n  render() {\n    const { name, amount } = this.state;\n\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Label customStyles={labelStyles}>\n          Enter expense name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChange}\n          />\n        </Label>\n        <Label customStyles={labelStyles}>\n          Enter expense amount\n          <Input\n            type=\"number\"\n            name=\"amount\"\n            value={amount === 0 ? '' : amount}\n            onChange={this.handleChange}\n          />\n        </Label>\n\n        <Button label=\"Add\" type=\"submit\" />\n      </Form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  expenses: getExpenses(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSave: data => dispatch(addExpenses(data)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpenseForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport Button from '../shared/Button';\nimport { getExpenses } from '../../redux/budget/budgetSelectors';\nimport { removeExpenses } from '../../redux/budget/budgetActions';\n\nconst Table = styled.table`\n  border-collapse: collapse;\n  text-align: center;\n  width: 100%;\n\n  tr {\n    border-bottom: 1px solid #212121;\n  }\n\n  td,\n  th {\n    padding-top: 8px;\n    padding-bottom: 8px;\n  }\n`;\n\nconst ExpensesTable = ({ expenses, onRemove }) => (\n  <Table>\n    <thead>\n      <tr>\n        <th>Expense name</th>\n        <th>Expense amount</th>\n        <th />\n      </tr>\n    </thead>\n    <tbody>\n      {expenses.map(({ id, name, amount }) => (\n        <tr key={id}>\n          <td>{name}</td>\n          <td>{amount}</td>\n          <td>\n            <Button label=\"Delete\" onClick={() => onRemove(id)} />\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </Table>\n);\n\nconst mapStateToProps = store => ({\n  expenses: getExpenses(store),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onRemove: id => dispatch(removeExpenses(id)),\n});\n\nExpensesTable.propTypes = {\n  expenses: PropTypes.arrayOf.isRequired,\n  onRemove: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpensesTable);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  text-align: center;\n  padding: 8px 24px;\n  color: ${props => (props.isPositive ? '#388E3C' : '#D32F2F')};\n  user-select: none;\n`;\n\nconst Label = styled.p`\n  margin-top: 0;\n  margin-bottom: 8px;\n  text-transform: uppercase;\n  font-weight: 500;\n  font-size: 24px;\n`;\n\nconst Amount = styled.p`\n  margin-top: 0;\n  margin-bottom: 0;\n  font-size: 48px;\n`;\n\nconst Value = ({ label, value, isPositive }) => (\n  <Container isPositive={isPositive}>\n    <Label>{label}</Label>\n    <Amount>{value}&nbsp;&#x24;</Amount>\n  </Container>\n);\n\nValue.propTypes = {\n  label: PropTypes.string.isRequired,\n  value: PropTypes.number.isRequired,\n  isPositive: PropTypes.bool,\n};\n\nValue.defaultProps = {\n  isPositive: false,\n};\n\nexport default Value;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport Value from '../Value/Value';\nimport {\n  getBudget,\n  calculateTotalExpenses,\n  calculateBalance,\n} from '../../redux/budget/budgetSelectors';\n\nconst Container = styled.section`\n  display: inline-flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Values = ({ budget, expenses, balance }) => (\n  <Container>\n    <Value label=\"Budget\" value={budget} isPositive />\n    <Value label=\"Expenses\" value={expenses} />\n    <Value label=\"Balance\" value={balance} isPositive={balance >= 0} />\n  </Container>\n);\n\nconst mapStateToProps = store => ({\n  budget: getBudget(store),\n  expenses: calculateTotalExpenses(store),\n  balance: calculateBalance(store),\n});\n\nValues.propTypes = {\n  budget: PropTypes.number.isRequired,\n  expenses: PropTypes.number.isRequired,\n  balance: PropTypes.number.isRequired,\n};\n\nexport default connect(mapStateToProps, null)(Values);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport BudgetForm from './BudgetForm/BudgetForm';\nimport ExpenseForm from './ExpenseForm/ExpenseForm';\nimport ExpensesTable from './ExpensesTable/ExpensesTable';\nimport Values from './Values/Values';\nimport * as budgetSelectors from '../redux/budget/budgetSelectors';\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 340px 1fr;\n  align-items: flex-start;\n  grid-gap: 24px;\n  max-width: 960px;\n  padding-left: 16px;\n  padding-right: 16px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst App = ({ expenses }) => {\n  return (\n    <Container>\n      <BudgetForm />\n      <Values />\n      <ExpenseForm />\n      {expenses.length > 0 && <ExpensesTable />}\n    </Container>\n  );\n};\n\nconst mapStateToProps = store => ({\n  expenses: budgetSelectors.getExpenses(store),\n});\n\nApp.propTypes = {\n  expenses: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n};\n\nexport default connect(mapStateToProps, null)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport App from './components/App';\nimport './styles.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}